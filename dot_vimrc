if &compatible
	set nocompatible
endif

filetype on
filetype plugin on
filetype indent on

set encoding=utf8

set number

syntax on

set autoindent

set cursorline
" set cursorcolumn

set ruler
set title

set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab

set textwidth=80
set wrap

set clipboard^=unnamed,unnamedplus

" Font type and size
if has('gui_macvim')
	set guifont=Hack\ Nerd\ Font:h14
elseif has ('win32')
	set guifont=Consolas:h12
endif

" Minpac: initialization
packadd minpac
call minpac#init()
call minpac#add('k-takata/minpac', {'type': 'opt'})

" Colorscheme: Ayu
call minpac#add('ayu-theme/ayu-vim')
set termguicolors
let ayucolor="dark"
colorscheme ayu

" auto-pairs
call minpac#add('jiangmiao/auto-pairs')

" airline: simple theme
call minpac#add('vim-airline/vim-airline')
call minpac#add('vim-airline/vim-airline-themes')
let g:airline_theme='simple'

" fugitive: Git support
call minpac#add('tpope/vim-fugitive')

" NERDTree
call minpac#add('preservim/nerdtree')
call minpac#add('Xuyuanp/nerdtree-git-plugin')
call minpac#add('tiagofumo/vim-nerdtree-syntax-highlight')
call minpac#add('PhilRunninger/nerdtree-visual-selection')

nmap <C-n> :NERDTreeToggle<CR>
autocmd VimEnter * NERDTree | wincmd p
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" VimDevIcons: Filetype icons
call minpac#add('ryanoasis/vim-devicons')

" Jedi: An autocompletion library
call minpac#add('davidhalter/jedi-vim')

call minpac#add('neoclide/coc.nvim')
call minpac#add('pappasam/coc-jedi')

" indentpython.vim
call minpac#add('vim-scripts/indentpython.vim')

" Quarto support
call minpac#add('vim-pandoc/vim-pandoc-syntax')
call minpac#add('quarto-dev/quarto-vim')
